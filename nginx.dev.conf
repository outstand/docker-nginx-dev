user nginx;
worker_processes  2;

error_log  /var/log/nginx/error.log notice;

events {
  worker_connections  1024;
}

http {
  include       /etc/nginx/mime.types;
  include       /etc/nginx/mime.types.fonts;
  default_type  application/octet-stream;

  access_log    /var/log/nginx/access.log;

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;

  keepalive_timeout  65;

  gzip  on;
  gzip_http_version 1.1;
  gzip_comp_level 6;
  gzip_proxied any;
  gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon image/png image/jpeg image/gif;
  gzip_vary on;
  gzip_disable "msie6";
  gzip_min_length 256;
  gzip_static on;

  client_max_body_size 60m;

  server_names_hash_bucket_size 64;

  proxy_buffer_size 128k;
  proxy_buffers 8 256k;
  proxy_busy_buffers_size 256k;

  upstream rails {
   server rails:3000 fail_timeout=0;
  }

  map $http_origin $public_api_allow_origin {
    hostnames;
    *.test $http_origin;
  }

  map $public_api_allow_origin $public_api_allow_methods {
    '' '';
    default 'GET, POST, PUT, PATCH, DELETE, HEAD, OPTIONS';
  }

  map $public_api_allow_origin $public_api_allow_headers {
    '' '';
    default 'DNT, Keep-Alive, User-Agent, X-Requested-With, If-Modified-Since, Cache-Control, Content-Type';
  }

  map $http_origin $forms_allow_origin {
    http://howmoneyworks.test $http_origin;
    http://tfaconnects.test $http_origin;
  }

  map $forms_allow_origin $forms_allow_methods {
    '' '';
    default 'POST, HEAD, OPTIONS';
  }

  map $forms_allow_origin $forms_allow_headers {
    '' '';
    default 'DNT, Keep-Alive, User-Agent, X-Requested-With, If-Modified-Since, Cache-Control, Content-Type';
  }

  # If we receive X-Forwarded-Proto, pass it through; otherwise, pass along the
  # scheme used to connect to this server
  map $http_x_forwarded_proto $proxy_x_forwarded_proto {
    default $http_x_forwarded_proto;
    ''      $scheme;
  }

  # If we receive Upgrade, set Connection to "upgrade"; otherwise, delete any
  # Connection header that may have been passed to this server
  map $http_upgrade $proxy_connection {
    default upgrade;
    '' close;
  }

  proxy_http_version 1.1;
  proxy_buffering off;
  proxy_redirect off;
  proxy_read_timeout 60;
  proxy_send_timeout 60;
  proxy_set_header Host $http_host;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection $proxy_connection;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;
  proxy_set_header X-Accel-Mapping /srv/public/=/public_files/;

  server {
    listen 80;
    server_name _;

    keepalive_timeout 5;

    root /srv/public/;

    client_max_body_size 10m;

    # Lie to rails so we can have our health check over HTTP for ELB
    location /health_check {
      access_log off;

      proxy_set_header Host $http_host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $proxy_connection;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      # Lie about https
      proxy_set_header X-Forwarded-Proto https;

      proxy_pass http://rails;
      break;
    }

    location /public_files {
      internal;
      alias /srv/public/;
      expires off;
      access_log off;
    }

    location / {
      try_files $uri @rails;
    }

    location @rails {
      proxy_pass http://rails;
    }

    location /api/v1/personal_websites/ {
      add_header 'Vary' 'Origin' always;
      add_header 'Access-Control-Allow-Origin' $public_api_allow_origin always;

      if ($request_method = 'OPTIONS') {
        add_header 'Vary' 'Origin';
        add_header 'Access-Control-Allow-Origin' $public_api_allow_origin;
        add_header 'Access-Control-Allow-Methods' $public_api_allow_methods;
        add_header 'Access-Control-Allow-Headers' $public_api_allow_headers;
        add_header 'Access-Control-Max-Age' 86400;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
      }

      proxy_pass http://rails;
    }

    location /api/v1/opt_in_forms/ {
      add_header 'Vary' 'Origin' always;
      add_header 'Access-Control-Allow-Origin' $public_api_allow_origin always;

      if ($request_method = 'OPTIONS') {
        add_header 'Vary' 'Origin';
        add_header 'Access-Control-Allow-Origin' $public_api_allow_origin;
        add_header 'Access-Control-Allow-Methods' $public_api_allow_methods;
        add_header 'Access-Control-Allow-Headers' $public_api_allow_headers;
        add_header 'Access-Control-Max-Age' 86400;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
      }

      proxy_pass http://rails;
    }

    location /forms/ {
      add_header 'Vary' 'Origin' always;
      add_header 'Access-Control-Allow-Origin' $forms_allow_origin always;

      if ($request_method = 'OPTIONS') {
        add_header 'Vary' 'Origin';
        add_header 'Access-Control-Allow-Origin' $forms_allow_origin;
        add_header 'Access-Control-Allow-Methods' $forms_allow_methods;
        add_header 'Access-Control-Allow-Headers' $forms_allow_headers;
        add_header 'Access-Control-Max-Age' 86400;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
      }

      proxy_pass http://rails;
    }

    location /nginx_status {
      stub_status on;
      access_log off;
      allow 127.0.0.1;
      deny all;
    }

    error_page 500 502 503 504 /500.html;
    location = /500.html {
      root /srv/public/;
    }
  }
}
